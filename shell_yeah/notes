ok, donc

keeping IGNORE longer means ::

we stick and addup way later, after the split_types etc.
we add a token component :: sign {0 for nothing, -1 for APPEND and 1 or HEREDOC}
we add a last function for stick_split, and then a round_up_types where we decide on IGNORE's types depending on placement within the chain.

think ::
quotes split + vars
split non IGNOREs, assing signs :: 1 for the one before, 2 for the one after, 3 for both, 0 for nothing
(delete lone spaces at the same time, base the sticks on the same sign for IGNORE types ?)
// done
spec_check
split_types
stick quotes :: based on signs, addup, and if one of them has a "real" type, we assign it
round_up :: based on the position of the link within the chain, all IGNORE types get a real type

looks good now, fixed a handle_var on numerical first character issue, pushing


echo tests variations ::

echo \n hello :: us:"\n hello" || bash:"n hello"
